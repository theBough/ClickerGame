Public Class Form1
    Dim generator As New Random
    Dim randomNum As Integer
    Dim buttons(100) As Button
    Dim buttonCount As Integer = 0
    Dim level As Integer = 0
    Dim time As Integer = 0
    Dim clicks As Integer = 0

    Sub levelUp()
        If clicks > 9 Then
            level += 1
            lblLevel.Text = level
            MsgBox("Congrats you Leveled Up")
        End If
    End Sub

    Private Sub btnPress_Click(sender As Object, e As EventArgs) Handles btnPress.Click
        Dim xSpot As Integer
        Dim ySpot As Integer
        createButton()
        xSpot = generator.Next(playingField.Left, playingField.Right - btnPress.Width)
        btnPress.Left = xSpot

        ySpot = generator.Next(playingField.Top, playingField.Bottom - btnPress.Height)
        btnPress.Top = ySpot
        If btnPress.Height > 5 Then
            btnPress.Height -= 5
        End If
        If btnPress.Width > 5 Then
            btnPress.Width -= 5
        End If
        clicks += 1
        lblClicks.Text = clicks
        levelUp()
        playingField.Focus()
    End Sub

    Function selectColour() As Color
        randomNum = generator.Next(1, 21)
        Select Case randomNum
            Case 1
                Return Color.HotPink()
            Case 2
                Return Color.GreenYellow()
            Case 3
                Return Color.Gray()
            Case 4
                Return Color.Goldenrod()
            Case 5
                Return Color.Fuchsia()
            Case 6
                Return Color.Honeydew()
            Case 7
                Return Color.Lime()
            Case 8
                Return Color.LightSkyBlue()
            Case 9
                Return Color.LightSlateGray()
            Case 10
                Return Color.Olive()
            Case 11
                Return Color.NavajoWhite()
            Case 12
                Return Color.MistyRose()
            Case 13
                Return Color.MidnightBlue()
            Case 14
                Return Color.Moccasin()
            Case 15
                Return Color.LightSeaGreen()
            Case 16
                Return Color.LawnGreen()
            Case 17
                Return Color.Red()
            Case 18
                Return Color.Maroon()
            Case 19
                Return Color.Purple()
            Case 20
                Return Color.Tomato()
        End Select
    End Function

    Private Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick
        selectColour()
    End Sub

    Sub createButton()
        buttonCount += 1
        buttons(buttonCount) = New Button
        With buttons(buttonCount)
            .Height = 100
            .Width = 100
            .Top = generator.Next(playingField.Top, playingField.Bottom - 100)
            .Left = generator.Next(playingField.Left, playingField.Right - 100)
            .BackColor = selectColour()
            .BringToFront()
        End With
        Me.Controls.Add(buttons(buttonCount))
        buttons(buttonCount).BringToFront()
        AddHandler buttons(buttonCount).MouseEnter, AddressOf buttonHandler

        'We are going to create a boolean that helps
        'determine if our newly created button
        'has a space with no collision.

        Dim thereIsACollision As Boolean = True

        While thereIsACollision
            thereIsACollision = False
            If buttonCount > 1 Then
                For i = 1 To buttonCount - 1
                    While buttons(buttonCount).Bounds.IntersectsWith(buttons(i).Bounds)
                        thereIsACollision = True
                        buttons(buttonCount).Top = generator.Next(playingField.Top, playingField.Bottom - 100)
                        buttons(buttonCount).Left = generator.Next(playingField.Left, playingField.Right - 100)
                    End While

                Next
            End If
        End While


    End Sub

    Sub buttonHandler(sender As Object, e As EventArgs)
        MessageBox.Show("Loser", "You Lost!" & vbCrLf & "Play again?", MessageBoxButtons.YesNo)
    End Sub

   
End Class
